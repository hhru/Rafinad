{"includedArchiveIdentifiers":["ru.hh.Rafinad"],"interfaceLanguages":{"swift":[{"children":[{"title":"Rafinad","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rafinad\/viewaccessibility\/init()","title":"init()","type":"init"}],"path":"\/documentation\/rafinad\/viewaccessibility","title":"ViewAccessibility","type":"class"},{"path":"\/documentation\/rafinad\/textaccessibility","title":"TextAccessibility","type":"class"},{"path":"\/documentation\/rafinad\/imageaccessibility","title":"ImageAccessibility","type":"class"},{"path":"\/documentation\/rafinad\/anyaccessibility","title":"AnyAccessibility","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rafinad\/screenaccessibility\/init()","title":"init()","type":"init"}],"path":"\/documentation\/rafinad\/screenaccessibility","title":"ScreenAccessibility","type":"class"},{"path":"\/documentation\/rafinad\/disableableaccessibility","title":"DisableableAccessibility","type":"protocol"},{"path":"\/documentation\/rafinad\/editableaccessibility","title":"EditableAccessibility","type":"protocol"},{"path":"\/documentation\/rafinad\/selectableaccessibility","title":"SelectableAccessibility","type":"protocol"},{"path":"\/documentation\/rafinad\/swipeableaccessibility","title":"SwipeableAccessibility","type":"protocol"},{"path":"\/documentation\/rafinad\/rotatableaccessibility","title":"RotatableAccessibility","type":"protocol"},{"path":"\/documentation\/rafinad\/pinchableaccessibility","title":"PinchableAccessibility","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rafinad\/accessibilitykey\/identifier","title":"var identifier: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/rafinad\/accessibilitykey\/isenabled","title":"static var isEnabled: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/rafinad\/accessibilitykey\/identifier(_:)","title":"static func identifier(String) -> AccessibilityKey","type":"method"},{"path":"\/documentation\/rafinad\/accessibilitykey\/keypath(_:)","title":"static func keyPath<Root, Value>(KeyPath<Root, Value>) -> AccessibilityKey","type":"method"},{"path":"\/documentation\/rafinad\/accessibilitykey\/keypath(_:item:)","title":"static func keyPath<Root, Value>(KeyPath<Root, Value>, item: String?) -> AccessibilityKey","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/rafinad\/accessibilitykey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/rafinad\/accessibilitykey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rafinad\/accessibilitykey\/animation(_:)","title":"func animation(Animation?) -> some ViewModifier","type":"method"},{"path":"\/documentation\/rafinad\/accessibilitykey\/body(content:)","title":"func body(content: Content) -> some View","type":"method"},{"path":"\/documentation\/rafinad\/accessibilitykey\/concat(_:)","title":"func concat<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/rafinad\/accessibilitykey\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some ViewModifier","type":"method"}],"path":"\/documentation\/rafinad\/accessibilitykey\/viewmodifier-implementations","title":"ViewModifier Implementations","type":"symbol"}],"path":"\/documentation\/rafinad\/accessibilitykey","title":"AccessibilityKey","type":"struct"},{"title":"RafinadTesting","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/rafinad\/testingelement\/init(application:)","title":"init(application: XCUIApplication)","type":"init"},{"path":"\/documentation\/rafinad\/testingelement\/init(element:)-8qgk4","title":"init(element: XCUIElement)","type":"init"},{"path":"\/documentation\/rafinad\/testingelement\/init(element:)-8vuuv","title":"init(element: XCUIElement)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rafinad\/testingelement\/element","title":"let element: XCUIElement","type":"property"},{"path":"\/documentation\/rafinad\/testingelement\/frame","title":"var frame: CGRect?","type":"property"},{"path":"\/documentation\/rafinad\/testingelement\/isenabled","title":"var isEnabled: Bool?","type":"property"},{"path":"\/documentation\/rafinad\/testingelement\/isexist","title":"var isExist: Bool","type":"property"},{"path":"\/documentation\/rafinad\/testingelement\/isfocused","title":"var isFocused: Bool?","type":"property"},{"path":"\/documentation\/rafinad\/testingelement\/ishittable","title":"var isHittable: Bool","type":"property"},{"path":"\/documentation\/rafinad\/testingelement\/isselected","title":"var isSelected: Bool?","type":"property"},{"path":"\/documentation\/rafinad\/testingelement\/label","title":"var label: String?","type":"property"},{"path":"\/documentation\/rafinad\/testingelement\/placeholder","title":"var placeholder: String?","type":"property"},{"path":"\/documentation\/rafinad\/testingelement\/text-1l7t8","title":"var text: String?","type":"property"},{"path":"\/documentation\/rafinad\/testingelement\/text-5d0cm","title":"var text: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rafinad\/testingelement\/assert(isenabled:file:line:)","title":"func assert(isEnabled: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/assert(isexist:file:line:)","title":"func assert(isExist: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/assert(isfocused:file:line:)","title":"func assert(isFocused: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/assert(ishittable:file:line:)","title":"func assert(isHittable: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/assert(isselected:file:line:)","title":"func assert(isSelected: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/assert(label:file:line:)","title":"func assert(label: String, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/assert(placeholder:file:line:)","title":"func assert(placeholder: String, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/assert(text:file:line:)-7pzun","title":"func assert(text: String, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/assert(text:file:line:)-j7ab","title":"func assert(text: String, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/clearbykeyboard()","title":"func clearByKeyboard() -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/doubletap()","title":"func doubleTap() -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/doubletap(x:y:)","title":"func doubleTap(x: CGFloat, y: CGFloat) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/drag(deltax:deltay:)","title":"func drag(deltaX: CGFloat, deltaY: CGFloat) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/drag(deltax:deltay:limit:until:)-5d1ok","title":"func drag(deltaX: CGFloat, deltaY: CGFloat, limit: Int, until: (`Self`) -> Bool) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/drag(deltax:deltay:limit:until:)-7e2ao","title":"func drag(deltaX: CGFloat, deltaY: CGFloat, limit: Int, until: @autoclosure () -> Bool) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/drag(from:to:)","title":"func drag(from: CGVector, to: CGVector) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/drag(from:to:limit:until:)-1yfy0","title":"func drag(from: CGVector, to: CGVector, limit: Int, until: @autoclosure () -> Bool) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/drag(from:to:limit:until:)-7n99s","title":"func drag(from: CGVector, to: CGVector, limit: Int, until: (`Self`) -> Bool) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/longpress()","title":"func longPress() -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/longpress(x:y:)","title":"func longPress(x: CGFloat, y: CGFloat) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/perform(_:)-5yuwd","title":"func perform((`Self`) -> Void) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/perform(_:)-6twc0","title":"func perform(() -> Void) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/pinch(scale:duration:)","title":"func pinch(scale: CGFloat, duration: TimeInterval) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/pinch(scale:velocity:)","title":"func pinch(scale: CGFloat, velocity: CGFloat) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/press(duration:)","title":"func press(duration: TimeInterval) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/press(duration:x:y:)","title":"func press(duration: TimeInterval, x: CGFloat, y: CGFloat) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/print()","title":"func print() -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/rotate(degrees:duration:)","title":"func rotate(degrees: CGFloat, duration: TimeInterval) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/rotate(degrees:velocity:)","title":"func rotate(degrees: CGFloat, velocity: CGFloat) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/rotate(radians:duration:)","title":"func rotate(radians: CGFloat, duration: TimeInterval) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/rotate(radians:velocity:)","title":"func rotate(radians: CGFloat, velocity: CGFloat) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/submitbykeyboard()","title":"func submitByKeyboard() -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/swipedown(velocity:)","title":"func swipeDown(velocity: XCUIGestureVelocity) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/swipedown(velocity:limit:until:)-3027f","title":"func swipeDown(velocity: XCUIGestureVelocity, limit: Int, until: @autoclosure () -> Bool) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/swipedown(velocity:limit:until:)-4x91s","title":"func swipeDown(velocity: XCUIGestureVelocity, limit: Int, until: (`Self`) -> Bool) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/swipeleft(velocity:)","title":"func swipeLeft(velocity: XCUIGestureVelocity) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/swipeleft(velocity:limit:until:)-6e11f","title":"func swipeLeft(velocity: XCUIGestureVelocity, limit: Int, until: @autoclosure () -> Bool) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/swipeleft(velocity:limit:until:)-74hcj","title":"func swipeLeft(velocity: XCUIGestureVelocity, limit: Int, until: (`Self`) -> Bool) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/swiperight(velocity:)","title":"func swipeRight(velocity: XCUIGestureVelocity) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/swiperight(velocity:limit:until:)-332de","title":"func swipeRight(velocity: XCUIGestureVelocity, limit: Int, until: (`Self`) -> Bool) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/swiperight(velocity:limit:until:)-3mo0n","title":"func swipeRight(velocity: XCUIGestureVelocity, limit: Int, until: @autoclosure () -> Bool) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/swipeup(velocity:)","title":"func swipeUp(velocity: XCUIGestureVelocity) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/swipeup(velocity:limit:until:)-19bx3","title":"func swipeUp(velocity: XCUIGestureVelocity, limit: Int, until: (`Self`) -> Bool) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/swipeup(velocity:limit:until:)-vri0","title":"func swipeUp(velocity: XCUIGestureVelocity, limit: Int, until: @autoclosure () -> Bool) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/tap()","title":"func tap() -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/tap(count:touchcount:)","title":"func tap(count: Int, touchCount: Int) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/tap(x:y:)","title":"func tap(x: CGFloat, y: CGFloat) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/typetext(_:)","title":"func typeText(String) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitfordeselected(timeout:failing:file:line:)","title":"func waitForDeselected(timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitfordisabled(timeout:failing:file:line:)","title":"func waitForDisabled(timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitforenabled(timeout:failing:file:line:)","title":"func waitForEnabled(timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitforexistence(timeout:failing:file:line:)","title":"func waitForExistence(timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitforfocused(timeout:failing:file:line:)","title":"func waitForFocused(timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitforhittable(timeout:failing:file:line:)","title":"func waitForHittable(timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitforlabel(_:timeout:failing:file:line:)","title":"func waitForLabel(String, timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitfornonexistence(timeout:failing:file:line:)","title":"func waitForNonExistence(timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitforplaceholder(_:timeout:failing:file:line:)","title":"func waitForPlaceholder(String, timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitforselected(timeout:failing:file:line:)","title":"func waitForSelected(timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitfortext(_:timeout:failing:file:line:)-3oqgf","title":"func waitForText(String, timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitfortext(_:timeout:failing:file:line:)-6pmrt","title":"func waitForText(String, timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitforunfocused(timeout:failing:file:line:)","title":"func waitForUnfocused(timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testingelement\/waitforunhittable(timeout:failing:file:line:)","title":"func waitForUnhittable(timeout: TimeInterval, failing: Bool, file: StaticString, line: UInt) -> TestingElement<Accessibility>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/rafinad\/testingelement\/subscript(_:)","title":"subscript<Wrapped>(Wrapped.Type) -> TestingElement<Wrapped>","type":"subscript"},{"path":"\/documentation\/rafinad\/testingelement\/subscript(dynamicmember:)-66j3m","title":"subscript<Subnode>(dynamicMember _: KeyPath<Accessibility, Subnode>) -> TestingElement<Subnode>","type":"subscript"},{"path":"\/documentation\/rafinad\/testingelement\/subscript(dynamicmember:)-7c877","title":"subscript<Collection>(dynamicMember _: KeyPath<Accessibility, Collection>) -> TestingList<Collection.Element>","type":"subscript"},{"path":"\/documentation\/rafinad\/testingelement\/subscript(dynamicmember:)-kdkn","title":"subscript<Subview>(dynamicMember _: KeyPath<Accessibility, Subview>) -> TestingElement<Subview>","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rafinad\/testingelement\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/rafinad\/testingelement\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/rafinad\/testingelement","title":"TestingElement","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rafinad\/testinglist\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/rafinad\/testinglist\/element","title":"let element: XCUIElement","type":"property"},{"path":"\/documentation\/rafinad\/testinglist\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rafinad\/testinglist\/assert(count:file:line:)","title":"func assert(count: Int, file: StaticString, line: UInt) -> TestingList<Accessibility>","type":"method"},{"path":"\/documentation\/rafinad\/testinglist\/assert(isempty:file:line:)","title":"func assert(isEmpty: Bool, file: StaticString, line: UInt) -> TestingList<Accessibility>","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/rafinad\/testinglist\/subscript(_:)-6de8h","title":"subscript(Int) -> TestingElement<Accessibility>","type":"subscript"},{"path":"\/documentation\/rafinad\/testinglist\/subscript(_:)-szph","title":"subscript(String) -> TestingElement<Accessibility>","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rafinad\/testinglist\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/rafinad\/testinglist\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/rafinad\/testinglist","title":"TestingList","type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rafinad\/swiftuicore\/view\/accessibilitykey(_:)-32qiz","title":"func accessibilityKey<Root, Value>(KeyPath<Root, Value>) -> ModifiedContent<Self, AccessibilityKey>","type":"method"},{"path":"\/documentation\/rafinad\/swiftuicore\/view\/accessibilitykey(_:)-5v76k","title":"func accessibilityKey(AccessibilityKey) -> ModifiedContent<Self, AccessibilityKey>","type":"method"},{"path":"\/documentation\/rafinad\/swiftuicore\/view\/accessibilitykey(_:item:)","title":"func accessibilityKey<Root, Value>(KeyPath<Root, Value>, item: String?) -> ModifiedContent<Self, AccessibilityKey>","type":"method"}],"path":"\/documentation\/rafinad\/swiftuicore\/view","title":"View","type":"extension"}],"path":"\/documentation\/rafinad\/swiftuicore","title":"SwiftUICore","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/rafinad\/uikit\/uiview\/accessibilitykey","title":"var accessibilityKey: AccessibilityKey?","type":"property"}],"path":"\/documentation\/rafinad\/uikit\/uiview","title":"UIView","type":"extension"}],"path":"\/documentation\/rafinad\/uikit","title":"UIKit","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/rafinad\/xctest\/xcuielement\/screen(of:)","title":"func screen<Screen>(of: Screen.Type) -> TestingElement<Screen>","type":"method"},{"path":"\/documentation\/rafinad\/xctest\/xcuielement\/view(of:)","title":"func view<View>(of: View.Type) -> TestingElement<View>","type":"method"}],"path":"\/documentation\/rafinad\/xctest\/xcuielement","title":"XCUIElement","type":"extension"}],"path":"\/documentation\/rafinad\/xctest","title":"XCTest","type":"extension"}],"path":"\/documentation\/rafinad","title":"Rafinad","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}